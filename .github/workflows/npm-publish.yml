name: CI/CD for NPM Plugins Hieroglyphs.io

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Clonage du repo
      uses: actions/checkout@v3

    - name: Configuration Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org/'

    - name: Installation des librairies
      run: npm install

    - name: Authentification à npmjs.com
      run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Test sur les plugins
      run: npm test

    - name: Construction du projet
      run: npm run build

    - name: Publish sur NPM
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: npm publish

    - name: Génération du fichier JSON des plugins
      run: |
        echo "Début de la génération du fichier JSON des plugins..."
        output_file="plugin-list.json"
        echo "[" > $output_file
        id_counter=0
        for file in src/lib/*.js; do
          echo "Traitement du fichier : $file"
          if [ -f "$file" ]; then
            # Extraction du nom de la fonction
            func_name=$(grep -oP 'function \K[a-zA-Z_][a-zA-Z0-9_]*' "$file" || true)
    
            # Extraction des tags depuis metadata
            tags=$(grep -Po 'tags: \[\K[^\]]*' "$file" | sed 's/, */,/g' | sed 's/"/\\"/g')
    
            # Génération du plugin_name à partir du nom de la fonction
            plugin_name=$(echo "$func_name" | sed -E 's/([A-Z])/-\L\1/g' | sed 's/^-//')
    
            if [ -n "$func_name" ]; then
              if [ $id_counter -gt 0 ]; then
                echo "," >> $output_file
              fi
              echo "  {" >> $output_file
              echo "    \"id\": \"p$(printf '%04d' $id_counter)\"," >> $output_file
              echo "    \"plugin_component\": \"$func_name\"," >> $output_file
              echo "    \"plugin_name\": \"$plugin_name\"," >> $output_file
              echo "    \"tags\": [$(echo $tags)]" >> $output_file
              echo "  }" >> $output_file
              id_counter=$((id_counter + 1))
            else
              echo "Aucune fonction trouvée dans $file"
            fi
          else
            echo "Pas de fichiers .js trouvés dans src/lib/"
          fi
        done
        echo "]" >> $output_file
        echo "Fichier JSON généré : $output_file"
        echo "Contenu de $output_file :"
        cat $output_file
      shell: bash
    

    - name: Sauvegarde de plugin-list.txt
      uses: actions/upload-artifact@v3
      with:
        name: plugin-list
        path: plugin-list.txt
    
    